using SDL2;

namespace Zelda.Game.Lowlevel
{
    public enum KeyboardKey
    {
        None = SDL.SDL_Keycode.SDLK_UNKNOWN,
        Backspace = SDL.SDL_Keycode.SDLK_BACKSPACE,
        Tabulation = SDL.SDL_Keycode.SDLK_TAB,
        Clear = SDL.SDL_Keycode.SDLK_CLEAR,
        Return = SDL.SDL_Keycode.SDLK_RETURN,
        Pause = SDL.SDL_Keycode.SDLK_PAUSE,
        Escape = SDL.SDL_Keycode.SDLK_ESCAPE,
        Space = SDL.SDL_Keycode.SDLK_SPACE,
        ExclamationMark = SDL.SDL_Keycode.SDLK_EXCLAIM,
        DoubleQuote = SDL.SDL_Keycode.SDLK_QUOTEDBL,
        Hash = SDL.SDL_Keycode.SDLK_HASH,
        Dollar = SDL.SDL_Keycode.SDLK_DOLLAR,
        Ampersand = SDL.SDL_Keycode.SDLK_AMPERSAND,
        SingleQuote = SDL.SDL_Keycode.SDLK_QUOTE,
        LeftParenthesis = SDL.SDL_Keycode.SDLK_LEFTPAREN,
        RightParenthesis = SDL.SDL_Keycode.SDLK_RIGHTPAREN,
        Aterisk = SDL.SDL_Keycode.SDLK_ASTERISK,
        Plus = SDL.SDL_Keycode.SDLK_PLUS,
        Comma = SDL.SDL_Keycode.SDLK_COMMA,
        Minus = SDL.SDL_Keycode.SDLK_MINUS,
        Period = SDL.SDL_Keycode.SDLK_PERIOD,
        Slash = SDL.SDL_Keycode.SDLK_SLASH,
        Zero = SDL.SDL_Keycode.SDLK_0,
        One = SDL.SDL_Keycode.SDLK_1,
        Two = SDL.SDL_Keycode.SDLK_2,
        Three = SDL.SDL_Keycode.SDLK_3,
        Four = SDL.SDL_Keycode.SDLK_4,
        Five = SDL.SDL_Keycode.SDLK_5,
        Six = SDL.SDL_Keycode.SDLK_6,
        Seven = SDL.SDL_Keycode.SDLK_7,
        Eight = SDL.SDL_Keycode.SDLK_8,
        Nine = SDL.SDL_Keycode.SDLK_9,
        Colon = SDL.SDL_Keycode.SDLK_COLON,
        Semicolon = SDL.SDL_Keycode.SDLK_SEMICOLON,
        Less = SDL.SDL_Keycode.SDLK_LESS,
        Equal = SDL.SDL_Keycode.SDLK_EQUALS,
        Greater = SDL.SDL_Keycode.SDLK_GREATER,
        QuestionMark = SDL.SDL_Keycode.SDLK_QUESTION,
        At = SDL.SDL_Keycode.SDLK_AT,
        LeftBracket = SDL.SDL_Keycode.SDLK_LEFTBRACKET,
        Backslash = SDL.SDL_Keycode.SDLK_BACKSLASH,
        RightBracket = SDL.SDL_Keycode.SDLK_RIGHTBRACKET,
        Caret = SDL.SDL_Keycode.SDLK_CARET,
        Underscore = SDL.SDL_Keycode.SDLK_UNDERSCORE,
        Backquote = SDL.SDL_Keycode.SDLK_BACKQUOTE,
        A = SDL.SDL_Keycode.SDLK_a,
        B = SDL.SDL_Keycode.SDLK_b,
        C = SDL.SDL_Keycode.SDLK_c,
        D = SDL.SDL_Keycode.SDLK_d,
        E = SDL.SDL_Keycode.SDLK_e,
        F = SDL.SDL_Keycode.SDLK_f,
        G = SDL.SDL_Keycode.SDLK_g,
        H = SDL.SDL_Keycode.SDLK_h,
        I = SDL.SDL_Keycode.SDLK_i,
        J = SDL.SDL_Keycode.SDLK_j,
        K = SDL.SDL_Keycode.SDLK_k,
        L = SDL.SDL_Keycode.SDLK_l,
        M = SDL.SDL_Keycode.SDLK_m,
        N = SDL.SDL_Keycode.SDLK_n,
        O = SDL.SDL_Keycode.SDLK_o,
        P = SDL.SDL_Keycode.SDLK_p,
        Q = SDL.SDL_Keycode.SDLK_q,
        R = SDL.SDL_Keycode.SDLK_r,
        S = SDL.SDL_Keycode.SDLK_s,
        T = SDL.SDL_Keycode.SDLK_t,
        U = SDL.SDL_Keycode.SDLK_u,
        V = SDL.SDL_Keycode.SDLK_v,
        W = SDL.SDL_Keycode.SDLK_w,
        X = SDL.SDL_Keycode.SDLK_x,
        Y = SDL.SDL_Keycode.SDLK_y,
        Z = SDL.SDL_Keycode.SDLK_z,
        Delete = SDL.SDL_Keycode.SDLK_DELETE,

        Kp0 = SDL.SDL_Keycode.SDLK_KP_0,
        Kp1 = SDL.SDL_Keycode.SDLK_KP_1,
        Kp2 = SDL.SDL_Keycode.SDLK_KP_2,
        Kp3 = SDL.SDL_Keycode.SDLK_KP_3,
        Kp4 = SDL.SDL_Keycode.SDLK_KP_4,
        Kp5 = SDL.SDL_Keycode.SDLK_KP_5,
        Kp6 = SDL.SDL_Keycode.SDLK_KP_6,
        Kp7 = SDL.SDL_Keycode.SDLK_KP_7,
        Kp8 = SDL.SDL_Keycode.SDLK_KP_8,
        Kp9 = SDL.SDL_Keycode.SDLK_KP_9,
        KpPeriod = SDL.SDL_Keycode.SDLK_KP_PERIOD,
        KpDivide = SDL.SDL_Keycode.SDLK_KP_DIVIDE,
        KpMultiply = SDL.SDL_Keycode.SDLK_KP_MULTIPLY,
        KpMinus = SDL.SDL_Keycode.SDLK_KP_MINUS,
        KpPlus = SDL.SDL_Keycode.SDLK_KP_PLUS,
        KpEnter = SDL.SDL_Keycode.SDLK_KP_ENTER,
        KpEqual = SDL.SDL_Keycode.SDLK_KP_EQUALS,

        Up = SDL.SDL_Keycode.SDLK_UP,
        Down = SDL.SDL_Keycode.SDLK_DOWN,
        Right = SDL.SDL_Keycode.SDLK_RIGHT,
        Left = SDL.SDL_Keycode.SDLK_LEFT,
        Insert = SDL.SDL_Keycode.SDLK_INSERT,
        Home = SDL.SDL_Keycode.SDLK_HOME,
        End = SDL.SDL_Keycode.SDLK_END,
        PageUp = SDL.SDL_Keycode.SDLK_PAGEUP,
        PageDown = SDL.SDL_Keycode.SDLK_PAGEDOWN,

        F1 = SDL.SDL_Keycode.SDLK_F1,
        F2 = SDL.SDL_Keycode.SDLK_F2,
        F3 = SDL.SDL_Keycode.SDLK_F3,
        F4 = SDL.SDL_Keycode.SDLK_F4,
        F5 = SDL.SDL_Keycode.SDLK_F5,
        F6 = SDL.SDL_Keycode.SDLK_F6,
        F7 = SDL.SDL_Keycode.SDLK_F7,
        F8 = SDL.SDL_Keycode.SDLK_F8,
        F9 = SDL.SDL_Keycode.SDLK_F9,
        F10 = SDL.SDL_Keycode.SDLK_F10,
        F11 = SDL.SDL_Keycode.SDLK_F11,
        F12 = SDL.SDL_Keycode.SDLK_F12,
        F13 = SDL.SDL_Keycode.SDLK_F13,
        F14 = SDL.SDL_Keycode.SDLK_F14,
        F15 = SDL.SDL_Keycode.SDLK_F15,

        NumLock = SDL.SDL_Keycode.SDLK_NUMLOCKCLEAR,
        CapsLock = SDL.SDL_Keycode.SDLK_CAPSLOCK,
        ScrollLock = SDL.SDL_Keycode.SDLK_SCROLLLOCK,
        RightShift = SDL.SDL_Keycode.SDLK_RSHIFT,
        LeftShift = SDL.SDL_Keycode.SDLK_LSHIFT,
        RightControl = SDL.SDL_Keycode.SDLK_RCTRL,
        LeftControl = SDL.SDL_Keycode.SDLK_LCTRL,
        RightAlt = SDL.SDL_Keycode.SDLK_RALT,
        LeftAlt = SDL.SDL_Keycode.SDLK_LALT,
        RightMeta = SDL.SDL_Keycode.SDLK_RGUI,
        LeftMeta = SDL.SDL_Keycode.SDLK_LGUI
    }
}
